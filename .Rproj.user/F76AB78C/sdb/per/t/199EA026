{
    "collab_server" : "",
    "contents" : "#' Results of dealing a hand of cards\n#'\n#' @param n.iter The number of iterations in the monte carlo simulation (integer > 0)\n#' @param hand.size The number of cards in each hand (shuffling would be \\code{hand.size = 52})\n#' @param parallel Should the simulation take advantage of multiple cores (defaults to \\code{FALSE} -\n#'   highly recommended if \\code{n.iter > 1e5})\n#' @return A list with \\code{n.iter} elements. Each element is a data frame of\n#'   size \\code{hand.size x 3}.\n#' @export\n#'\ndeal.cards = function(n.iter = 1e5, hand.size = 5, parallel = FALSE) {\n  stopifnot(n.iter %% 1 == 0 & n.iter > 0)\n  stopifnot(hand.size %% 1 == 0 & hand.size > 0)\n  suits <- c(\"Diamonds\", \"Clubs\", \"Hearts\", \"Spades\")\n  cards <- c(\"Ace\", \"Deuce\", \"Three\", \"Four\",\"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\", \"Ten\", \"Jack\", \"Queen\", \"King\")\n  values <- c(0, 2:9, rep(10, 4))\n  totalNumOfDecks <- 1\n  deck <- expand.grid(cards=cards, suits=suits)\n  deck$value <- values\n  if(!parallel) {\n    results = lapply(seq_len(n.iter), FUN = function(i) {\n      deck[sample(1:52, size = hand.size, replace = FALSE),]\n    })\n  } else {\n    results = mclapply(seq_len(n.iter), FUN = function(i) {\n      deck[sample(1:52, size = hand.size, replace = FALSE),]\n    })\n  }\n  return(results)\n}\n\n",
    "created" : 1476123703735.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1772455611",
    "id" : "199EA026",
    "lastKnownWriteTime" : 1476126610,
    "last_content_update" : 1476126610529,
    "path" : "~/Documents/RProjects/Clancy.Functions/R/deal.cards.r",
    "project_path" : "R/deal.cards.r",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}